#summary A Distribution of python tools

= Introduction =

The TransitFeedDistribution contains several parts, each with its own instructions

  * TransitFeed - a Python module for reading, writing, and validating feeds
  * FeedValidator - a command line tool that checks a Google Transit Feed for problems
  * ScheduleViewer - an application for exploring a feed on a map   
  * [KMLWriter] - an application for plotting a feed's stops in a KML file for viewing in Google Earth 

= Download =

You may download the transitfeed distribution as Windows executables, a source tar ball or directly from our Subversion repository.

== Windows Executable ==

If you just want to run the tools you may download prebuilt Windows programs from [http://code.google.com/p/googletransitdatafeed/downloads/list the downloads section]. Download the latest version of `transitfeed-<version>-windows.zip` and unzip the contents into an empty directory.  Then see the ScheduleViewer and FeedValidator pages for further instructions.

== Install source distribution ==

Some features of the distribution depend on !ElementTree (added to Python's standard library in version 2.5) and pytz. You may need to install these manually.

`easy_install transitfeed` will download and install transitfeed and the scripts that come with it.

If you don't have easy_install on your computer you may download `transitfeed-<version>.tar.gz` from [http://code.google.com/p/googletransitdatafeed/downloads/list the downloads section]. Expand with `tar -xzf transitfeed-<version>.tar.gz`. You may run the tools directly from the expanded directory or run `python2.4 setup.py install`.

== Subversion repository ==

If you want to make changes grab our source from http://googletransitdatafeed.googlecode.com/svn/trunk/python.

= Bugs and feature requests =

Please create a new issue if you find bugs or have a feature requests. Patches released under the terms of the Apache 2.0 license are more than welcome! You may contact the developers in the [http://groups.google.com/group/googletransitdatafeed Google Transit Data Feed Google Group]. 

= Revision History =

==== v1.1.2 ====
  * Changed #! from python2.4 to python2.5
  * Check for rows missing cells. Contributed by Clancy
  * fixed typo in FareRule
  * kmlwriter much enhanced by Timothy. For each route output the shapes, patterns of stops and optionally a line for each trip

==== v1.1.1 ====
  * Schedule Viewer changes:
    * More accurate display of route names
    * Better support for unicode IDs
    * Stop time interpolation
  * FeedValidator changes:
    * FeedValidator now categorizes issues as either errors or warnings
    * Checks for missing start & end times on trips
    * Warning if the feed has expired or will in the next month
    * Better handling of UTF-8/16 and other file encoding issues
    * Allows more lenient sequence numbers now that the spec allows them
    * Added warning for poor route color contrast

==== v1.1.0 ====
  * Schedule Viewer now displays shapes when available.
  * FeedValidator now shows feed metadata at the top of its output and highlights the relevant column for problems.
  * Added `--output` switch to set HTML output path and made `-n` switch disable loading of output in browser in FeedValidator.
  * Validation changes:
    * Duplicate schedule_id validation now works
    * Error on stops that don't pick up, drop off, or act as a timepoint
    * Error when day in service period isn't set to "1" or "0"
    * More thorough checking of date values
    * Error when a stop time departs before it arrives
    * Error when a stop time specifies either arrival or departure time, but not both

==== v1.0.9 ====
  * FeedValidator now provides nicer HTML output in a browser instead of hard-to-read text.
  * Added a directory of example Python scripts using transitfeed.
  * kmlparser converts KML lines into GTFS shape.

==== v1.0.8 ====
Move schedule_viewer data files and marey_graph into package gtfsscheduleviewer so that setup.py installs them in a sensible place. Add a hack so py2exe schedule_viewer can find its data files. schedule_viewer --key option will get key from a file if it exists.

==== v1.0.7 ====
Adds kmlparser and kmlwriter utilities for partially converting feeds from and to Google Earth KML format.  Also includes several validation improvements, particularly to stop times and route_short_name.

==== v1.0b6 ====
Adds a Windows executable for schedule_viewer.

==== v1.0b5 ====
Adds more validation of service_ids.

==== v1.0b4 ====
Further improves line wrapping, improves ID display, limits the number of unused stops shown.

==== v1.0b3 ====
Adds better line wrapping to make the output more pleasant to read.

==== v1.0b2 ====
Adds testing to identify stops that probably refer to the same location because they're close enough together.

==== v1.0b1 ====
First standalone Windows version.
 
 