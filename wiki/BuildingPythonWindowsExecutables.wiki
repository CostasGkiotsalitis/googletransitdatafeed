#summary Instructions on building standalone EXEs from Python code

Python and Subversion are great, but they're not very straightforward for non-programmers to use.  The sample applications that we've built in Python will be useful to more people if they can be downloaded as standalone Windows executables.  Here are some notes on how to use `py2exe` to build Windows apps.

= Ingredients =

|| [http://www.python.org/ftp/python/2.5/python-2.5.msi Python 2.5 for Windows] || py2exe doesn't recognize the Cygwin version, so you'll need to have this one around ||
|| [http://sourceforge.net/project/showfiles.php?group_id=15583 py2exe] || ||
|| [http://cheeseshop.python.org/pypi/pytz/ pytz (zip/gz)] || py2exe doesn't understand Python eggs, so you'll need to [http://www.py2exe.org/index.cgi/ExeWithEggs install this the old way] ||
|| [http://cheeseshop.python.org/pypi/simplejson/ simplejson] || Don't install as an egg, see pytz above ||

As of Nov 2008 here is how I install these on a new Windows XP install.
  # Install python2.5 from http://python.org/
  # Install py2exe-0.6.9.win32-py2.5.exe using the Windows installer from http://www.py2exe.org/
  # Install setuptools-0.6c9.win32-py2.5.exe from http://pypi.python.org/pypi/setuptools/
  # `c:\Python25\Scripts\easy_install.exe --always-unzip pytz`
  # `c:\Python25\Scripts\easy_install.exe --always-unzip simplejson` (it will warn you that you don't get the faster C version)
  # `c:\Python25\Scripts\easy_install.exe nose`
  # Install TortoiseSVN from http://tortoisesvn.tigris.org/

= Steps =

First make sure the scripts work. Run them directly. Install nose and run the automated tests ({{{\Python25\Scripts\nosetests.exe}}}). Make sure the same number of tests ran in linux. Note also issue 37.

`svn export http://googletransitdatafeed.googlecode.com/svn/tags/transitfeed-<version>/`. You can find this by right clicking in any folder and going to the TortoiseSVN submenu.

Change into the python directory of the exported code and run:
{{{C:\Python25\python.exe setup.py py2exe}}}

This will create a directory {{{transitfeed-windows-binary-<version>}}}. (The name was picked so that it appears after the source tar.gz on the project home page. `easy_install transitfeed` fetches the first archive file it finds.) Put it into a new zip file with the name {{{transitfeed-windows-binary-<version>.zip}}} by right clicking on the folder and choosing Send To -> Compressed (zipped) Folder. Then upload it to the project.

= TODO =

Make an installer.
 
 