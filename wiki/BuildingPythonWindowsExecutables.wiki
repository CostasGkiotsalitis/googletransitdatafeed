#summary Instructions on building standalone EXEs from Python code

Python and Subversion are great, but they're not very straightforward for non-programmers to use.  The sample applications that we've built in Python will be useful to more people if they can be downloaded as standalone Windows executables.  Here are some notes on how to use `py2exe` to build Windows apps.

= Ingredients =

|| [http://www.python.org/download/releases/ Python 2.5 for Windows] || py2exe doesn't recognize the Cygwin version, so you'll need to have this one around ||
|| [http://sourceforge.net/projects/py2exe/files/ py2exe] || ||
|| [http://pypi.python.org/pypi/pytz/ pytz (zip/gz)] || py2exe doesn't understand Python eggs, so you'll need to [http://www.py2exe.org/index.cgi/ExeWithEggs install this the old way] ||
|| [http://pypi.python.org/pypi/simplejson/ simplejson] || py2exe doesn't understand Python eggs, so you'll need to [http://www.py2exe.org/index.cgi/ExeWithEggs install this the old way] ||

You will also need a Subversion client to get hold of the code and Nose to run the tests.

As of Nov 2008 here is how I install these on a new Windows XP install.
  # Install python2.5 from http://python.org/
  # Install py2exe-0.6.9.win32-py2.5.exe using the Windows installer from http://www.py2exe.org/
  # Install setuptools-0.6c9.win32-py2.5.exe from http://pypi.python.org/pypi/setuptools/
  # `c:\Python25\Scripts\easy_install.exe --always-unzip pytz`
  # `c:\Python25\Scripts\easy_install.exe --always-unzip simplejson` (it will warn you that you don't get the faster C version)
  # `c:\Python25\Scripts\easy_install.exe nose`
  # Install TortoiseSVN from http://tortoisesvn.tigris.org/

For Nov 2009 here is how I install these on a Windows XP machine. Some of them expect the Windows Installer to be available, but that should anyways be the case.
  # Install python2.5.4 from http://python.org/
  # Install py2exe-0.6.9.win32-py2.5.exe from http://www.py2exe.org/
  # Install setuptools-0.6c11.win32-py2.5.exe from http://pypi.python.org/pypi/setuptools/
  # `c:\Python25\Scripts\easy_install.exe --always-unzip pytz` gave me pytz 2009r
  # `c:\Python25\Scripts\easy_install.exe --always-unzip simplejson` gave me simplejson-2.0.9-py2.5-win32
  # `c:\Python25\Scripts\easy_install.exe nose` gave me nose-0.11.1
  # Install TortoiseSVN-1.6.6.17493-win32-svn-1.6.6 from http://tortoisesvn.tigris.org/ , which needed a reboot after installation.

= Steps =

Make a new directory and do `svn export http://googletransitdatafeed.googlecode.com/svn/tags/transitfeed-<version>/`.  To do that with TortoiseSVN, you go into the directory with Explorer, right-click, and select TortoiseSVN >> Export.

Now make sure the scripts work. Run them directly. Using nose (installed as above), run the automated tests ({{{\Python25\Scripts\nosetests.exe}}}). Make sure the same number of tests ran in linux. Note also issue 37.

Change into the python directory of the exported code and run:
{{{C:\Python25\python.exe setup.py py2exe}}}

This will create a directory {{{transitfeed-windows-binary-<version>}}}. (The name was picked so that it appears after the source tar.gz on the project home page. `easy_install transitfeed` fetches the first archive file it finds.) Put it into a new zip file with the name {{{transitfeed-windows-binary-<version>.zip}}} by right clicking on the folder and choosing Send To -> Compressed (zipped) Folder. Make sure the name includes the full version number and then add it to the project Downloads page.

= TODO =

Make an installer.