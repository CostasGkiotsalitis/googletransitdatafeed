#summary Instructions on building standalone EXEs from Python code

Python and Subversion are great, but they're not very straightforward for non-programmers to use.  The sample applications that we've built in Python will be useful to more people if they can be downloaded as standalone Windows executables.  Here are some notes on how to use `py2exe` to build Windows apps.

= Ingredients =

|| [http://www.python.org/ftp/python/2.5/python-2.5.msi Python 2.5 for Windows] || py2exe doesn't recognize the Cygwin version, so you'll need to have this one around ||
|| [http://sourceforge.net/project/showfiles.php?group_id=15583 py2exe] || ||
|| [http://cheeseshop.python.org/pypi/pytz/ pytz (zip/gz)] || py2exe doesn't understand Python eggs, so you'll need to [http://www.py2exe.org/index.cgi/ExeWithEggs install this the old way] ||
|| [http://cheeseshop.python.org/pypi/simplejson/ simplejson] || Don't install as an egg, see pytz above ||

= Steps =

First make sure the scripts work. Run them directly. Install nose ({{{\\filer\home\thecap\src\transitfeed-1.1.0\python\dist}}}) and run the automated tests ({{{\Python25\Scripts\nosetests.exe}}}). Make sure the same number of tests ran in linux. Note also issue 37.

Assuming you have python installed in the default location on your Windows machine change into the python directory of your subversion working copy and run:
{{{\Python25\python.exe setup.py py2exe}}}

This will create a directory dist. Put the contents of dist into a new zip file with the name {{{transitfeed-windows-binary-<version>.zip}}} and upload it to the project.

= TODO =

Make an installer.
 
 