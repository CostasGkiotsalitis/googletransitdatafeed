#summary Transxchange2GoogleTransit developer information

= Introduction =
This page describes the developer edition of transformation programs. The project source code is maintained in [http://code.google.com/p/googletransitdatafeed Google Code]. Navigate to the [http://code.google.com/p/googletransitdatafeed/source Source tab] to access the project source code. Google Code uses [http://www.subversion.tigris.org Subversion] to manage source code.

= Program source files =

== Transxchange2GoogleTransit ==
The [http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/Transxchange2GoogleTransit.java Transxchange2GoogleTransit] class contains the main() method. main() runs through three steps:
  * processes command line arguments
  * call the SAX handler ([http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/TransxchangeHandler.java TransxchangeHandler]). It parses the input xml file and generates data structures ready for Google Transit data feed file set generation
  * generate Google Transit data feed file set
The SAX handler is the "brain" of the Transxchange2GoogleTransit program. The source files of the SAX handler reside in the transxchange2GoogleTransitHandler/src directory. [http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/TransxchangeHandler.java TransxchangeHandler] holds and fills the data structures for the Google Transit data feed file set generation
{{{
	TransxchangeAgency agencies;
	TransxchangeStops stops;
	TransxchangeRoutes routes;
	TransxchangeTrips trips;
	TransxchangeStopTimes stopTimes;
	TransxchangeCalendar calendar;
	TransxchangeCalendarDates calendarDates;
}}}
[http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/TransxchangeHandler.java TransxchangeHandler] also implements the SAX parsing methods startElement(), characters() and endElement(). The implementations of these three methods in [http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/TransxchangeHandler.java TransxchangeHandler] call their respective implementations in the classes [http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/TransxchangeAgency.java TransxchangeAgency] through [http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/TransxchangeCalendarDates.java TransxchangeCalendarDates]. They cover the corresponding aspects of the input file. [http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/TransxchangeRoutes.java TransxchangeRoutes] for example focuses on the aspect of route data transformation. Common code of these classes is centralized in the abstract superclass [http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/TransxchangeDataAspect.java TransxchangeDataAspect]. The data structures are filled with [http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/ValueList.java ValueLists]. Finally, [http://googletransitdatafeed.googlecode.com/svn/trunk/Transxchange2GoogleTransit/src/transxchange2GoogleTransitHandler/TransxchangeHandler.java TransxchangeHandler] has a method to write the Google Transit output files.

== GWT_Transxchange2GoogleTransit ==
GWT_TransxchangeGoogleTransit is implemented as a web application. On the server side, it requires a [http://java.sun.com/products/servlet Sun Servlet] compliant application server and Java 1.4.2. The client side is JavaScript/AJAX-based. The [http://code.google.com/webtoolkit Google Web Toolkit] is used as a cross compiler to create the relevant JavaScript code from Java source code.

= Change validation tool =
You can verify program changes by running validate.bat (Windows) or validate.sh (Linux). The validate script runs the transformation program with a set of representative source transit data, and compares the resulting files against a reference file set which was created by the original version of the transformation program you are working with. 

The validate script envokes the diff tool to show differences in the resulting file set against the reference file set. This shows differences between the reference file set and the resulting file set - differences which might be intended as part of bug fixes or new features, or not which might be unintended side effects of program changes.

= Change process =
The source code of GoogleTransitDataFeed software is managed in [http://code.google.com/p/googletransitdatafeed Google Code]. Google Code uses [http://www.subversion.tigris.org Subversion] to manage change.

= TransXchange2GoogleTransit version release notes =
  * v1.6.2 - Conformance with GTFS revision 20-Nov-2007: first and last stop of trip in stop_times with arrival respective departure time.
  * v1.6.2 - tXCh2GT scripts run with increased maximum heap size of 256M to accommodate processing of input file sets in zip archive.
  * v1.6.1 - Consolidation of routes
  * v1.6 - A set of input files in a zip archive are now accepted. 
  Note: 1. The first service start date of the input file is no longer used to create a sub directory in <output-directory> hosting the feed files. Feed files are now directly saved to <output-directory> ---
  2. It assumed that routes and trips are disjunctive in the input file set, i.e. routes must not be split over several input files. Stops and agency information however are consolidated to avoid replication of stop and agency records in stops.txt and agency.txt
  * v1.5 - The Google Transit feed files are compliant with the 31-May-2007 review of the Google Transit Feed Specification 
  * v1.5 - UK stop coordinates, included in the jar files of the distribution
  * v1.5 - Frequency format Seconds added
  * v1.5 - England and Wales bank holidays 2007, 2008, 2009 added for consideration in services
  * v1.5 - Bugfix for calculation of wait times. to-TimingLink wait times are added to the to-stop
  * v1.5 - VehicleJourney specific SpecialDaysOfOperation covered
  * v1.5 - The default DaysOfOperation of a service is assumed no days now; had been MO-FR without particular justification  
  * v1.5 - GWT web application can run stand-alone from wiki-based authorization

  * v1.4  - Switch to [http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0]
  * v1.4  - Internet ready web application; integrates with Mediawiki user management
  * v1.4  - New upload-only google_transit.zip feature
  * v1.3  - google_transit.zip is now automatically created
  * v1.3  - Web application GWT_Transxchange2GoogleTransit added
  * v1.2  - Refactored transxchange2GoogleTransitHandler to create self-contained package; remove compile warnings. Not intended for binary release
  * v1.1  - Java 1.4.2 support
  * v1.0b - Eclipse 3.2.2 workbench
  * v1.0a - Add build.xml
  * v1.0  - Initial release. Binaries, validation tools, source files

 
 