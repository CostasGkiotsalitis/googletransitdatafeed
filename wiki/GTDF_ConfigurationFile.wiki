#summary This page describes the TransXChange2GTFS converter configuration file.

== Introduction ==
This page describes the structure and settings of the TransXChange2GTFS converter. The individual settings are described in the sections below.

== Output Directory ==
Directory path to save the resulting google_transit.zip file.

{{{output-directory=<outout path>}}}

== Agency URL ==
The agency URL is used to fill the agency_url field in the GTFS agency.txt file. 

{{{url=<Agency URL>}}}

== Agency Timezone ==
A timzone is used to fill the agency_timezone field in the GTFS agency.txt file.

{{{timezone=<List of timezones: http://en.wikipedia.org/wiki/List_of_tz_zones>}}}

== Agency shortname flag ==
Flag to determine whether OperatorShortName should be used to fill the agency_name field in the GTFS agency.txt file. Default: false, which uses OperatorNameOnLicence.

{{{useagencyshortname=<true|false>}}}

== Agency mapping ==
This setting maps the agency_id as captured from the operator registration into an agency_name of the GTFS agency.txt file. 
Use '=' to separate key ("agency"), agency_id and the mapped agency name. Multiple agency mappings can be defined, using separate rows.
Example:
<pre>
agency:OId_LU=London Buses, operated by London United
agency:OId_48=London Buses, operated by London General</pre>
The resulting output in agency.txt uses OId_LU as agency_id, and "London Buses, operated by London United" as agency_name, and so forth.
Without this setting, agency_name's are populated with the values of the OperatorNameOnLicence or OperatorShortName tag, as directed by the agencyshortname setting.

== Skip Empty Services ==
Services sometimes do not combine to a valid day pattern, and lead to the following types of records in a GTFS calendar.txt file:
<pre>
<service_id>,0,0,0,0,0,0,0,<start_date>,<end_date> </pre>
Services which do not contain a valid day pattern can be skipped by specifying:

{{{skipemptyservice=true}}}

As a side effect, specific non-service days (DaysOfNonOperation) are also skipped in the GTFS calendar_dates.txt file, while records for specific active DaysOfOperation continue to be included in the GTFS calendar_dates.txt file. Default value=false

== Default Route Type ==
The default route type is used to fill the route_type field in the GTFS routes.txt file.

{{{default-route-type=<0 - Tram, 1 - Subway, 2 - Rail, 3 - Bus, 4 - Ferry, 5 - Cable car, 6 - Gondola, 7 - Funicular>}}}

== Mode Override of Default Route Type ==
Services of a TransXChange feed that include Mode tags are mapped to a mode as defined in the configuration file. 

{{{mode:<<Mode> tag value>=<GTFS mode value>}}}
<pre>
Example:
mode:rail=2
mode:bus=3
mode:ferry=4</pre>
With this mapping, occurrences of a Service Mode "bus" in the TransXChange feed will be set to value "3" in the route_type field of the GTFS routes.txt file.

== Skip Orphaned Stops ==
TransXChange feeds sometimes contain stops which are not referenced in any of the services. Stops which are not referenced by a service ("orphan stops") can be skipped. Default value=false

{{{skiporhpanstops=<true|false>}}}

== Geocode Stop Coordinates Where Missing ==
The GTFS specification requires WGS-84 coordinates for each stop in the GTFS stops.txt file. Some coordinates for stops of a TransXChange input, possibly in concert with a NapTAN stop file, may not be available however. With this option active, the converter makes an attempt to geocode the stop's coordinates, using Google's Maps API. (http://code.google.com/apis/maps/documentation/geocoding/)
The converter logs geocoding attempts in the console.
Note: Geocoded coordinates are expected to have insufficient accuracy for most uses. This feature allows to reach formal compliance to validate against the GTFS specification. Default value=false

{{{geocodemissingstops=<true|false>}}}

== NaPTAN Stop File ==
Path and filename of a NaPTAN version 1 CSV stop file. 

{{{stopfile=<file name of optional stopfile name in NaPTAN CSV format>}}}

== NaPTAN Stop Name Helper Flag ==
Without the NaPTAN stop name helper activated, the converter combines the values of CommonName and LocalityName to stop_name values. The NapTAN stop name helper implements the "usable stop name rules v4 for NaPTAN and NPTG databases". It unrolls the following stop_name format from a NaPTAN version 1 CSV stop file, as follows:
<pre>
<LocalityName>,<Indicator><CommonName>(on <street>)[SMS: <NaptanCode>]</pre>
Default value=false

== NaPTAN Stop Column Pick ==
When a NaPTAN stop column pick is defined, the converter picks the value of the respective column (attribute) from a NaPTAN version 1 CSV stop file. A NaPTAN stop column pick definition in a configuration file overrides the NaPTAN stop name helper if activated. The columns are picked in the sequence they occur in the configuration file.
Example:
<pre>
naptanstopcolumn="CommonName"
naptanstopcolumn="NatGazLocality"
naptanstopcolumn="ATCOCode"
</pre>
This results in a stop_name that is a combination of a stop's CommonName, NatGazLocality and ATCOCode. 
Note that the respective values identify the columns in a NaPTAN version 1 CSV stop file. In the GTFS stops.txt file, the values of the picked columns are separated by a comma (,), or by the definition of the NaPTAN stop column separator.

== NaPTAN Stop Column Separator ==
The stop column separator works in conjunction with the NaPTAN stop name helper and NaPTAN stop column pick definitions. The value defined is used in place of the default comma (,).
Example:
<pre>
stopfilecolumnseparator=;-</pre>